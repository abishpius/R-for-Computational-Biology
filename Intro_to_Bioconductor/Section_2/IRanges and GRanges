#!/usr/bin/env Rscript

#Load Data These are the reported ESRRA binding sites obtained for a ENCODE ChIP-seq experiment on two cell lines: HepG2 and GM12878.
BiocManager::install("genomicsclass/ERBS")
library(ERBS)
data(HepG2)

#What is the median of the signalValue column for the HepG2 data?
library(ERBS)
data(HepG2)
median( mcols(HepG2)$signalValue )

#In what chromosome is the region with the highest signalValue
 i=which.max(  mcols(HepG2)$signalValue  )
seqnames(HepG2[i])

#How many regions are from chromosome 16?
chr = seqnames(HepG2)
table(chr)[16]

#What is the median width?
median( width(HepG2) )

#Load the IRanges package. Define an integer range starting at 101 and ending at 200. If we use the operation *2, this will zoom in, giving us a range with half the width. What is the starting point of the resulting range?
library(IRanges)

IRanges(101,200) * 2

#Define an integer range starting at 101 and ending at 200. If we use the operation narrow(x, start=20), what is the new starting point of the range?
narrow(IRanges(101,200), start=20)

#Define an integer range starting at 101 and ending at 200. If we use the operation +25, what is the width of the resulting range?narrow(IRanges(101,200), start=20)
IRanges(101,200)+25

#Define an IRanges with starts at 1,11,21 and ends at 3,15,27. width() gives the widths for each range. What is the sum of the widths of all the ranges?
sum(width(IRanges(start=c(1,11,21),end=c(3,15,27))))

#Define an IRanges object, x, with the following set of ranges: Starts at 101,106,201,211,221,301,306,311,351,361,401,411,501 Ends at 150,160,210,270,225,310,310,330,390,380,415,470,510   What is the total width from 101 to 510 which is not covered by ranges in x?
sum(width(gaps(x)))

#How many disjoint ranges are contained within the ranges in x?
length(disjoin(x))


#SETUP Granges
library(GenomicRanges)
x = GRanges("chr1", IRanges(c(101,201,401,501),c(150,250,450,550)), strand="+")
y = GRanges("chr1", IRanges(c(101,221,301,401,541),c(150,250,350,470,550)), strand="+")

#Find the total width which is covered by ranges in both x and y
disjoined = disjoin(c(x,y))
in.both = disjoined %over% x & disjoined %over% y
sum(width(disjoined[ in.both ]))

#What is the total width which is in x or y but not in both?
disjoined = disjoin(c(x,y))
not.in.both = !(disjoined %over% x & disjoined %over% y)
sum(width(disjoined[ not.in.both ]))

#What is the number of ranges in x which overlap z according to the %over% command?
 z = GRanges("chr1", range(ranges(x)), strand="-")
sum(x %over% z)

