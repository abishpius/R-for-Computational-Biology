---
title: "R Notebook"
output: html_notebook
---

#LDA Analysis

qRecalling that mass spec simply identifies proteins found in a sample, one interesting type of
analysis we can do is the comparison of proteins found between different sampling conditions - for
example, proteins found in a disease conditions vs a control, or healthy, condition.
qOne way of analyzing data with multiple conditions is by using Linear Discriminate Analysis, or LDA.
qLDA is similar to ANOVA and regression analysis, and attempts to find a linear combination of
features that can be used to separate two or more classes of objects.
qIn the data we are going to use there are 3 different groups, or conditions, spread out among 177
separate samples, each of which was run through a mass spec to generate protein quantity values.
qThe LDA analysis can let us know whether or not the proteins levels between groups are sufficient
to be able to distinguish the 3 groups.


Install (with install.packages):
qtimeSeries
qMASS
qrgl
```{r}
library(timeSeries)
library(MASS)
library(rgl)
library(ggplot2)
```

```{r}
Dataset <- read.csv("ms.csv", header=TRUE, na.strings="NA", dec=".", strip.white=TRUE)
```

One of the first things we need to do is to "limit" the dataset to just the actual protein data that we want to perform the LDA analysis on.

```{r}
RawData <- Dataset[,2:14]
```

```{r}
filledcols = colSds(RawData) != 0.0

RawData <- RawData[,filledcols]
```

```{r}
test1.lda <- lda(Dataset$X1 ~ . , data=Dataset)
```
```{r}
test1.lda.values <- predict(test1.lda,Dataset)
```
```{r}
x <- test1.lda.values$x[,1]

y <- test1.lda.values$x[,2]
```
```{r}
class <- Dataset$X1
```
```{r}
plotdata <- data.frame(class, x, y)

```

```{r}
centroids <- aggregate(cbind(x,y)~class,plotdata,mean)
```

```{r}
CentroidDistances <- dist(centroids, method = "euclidean", diag = TRUE, upper = FALSE, p = 2)
```

```{r}
attr(CentroidDistances, "Labels") <- centroids$class
```

```{r}
plot1 <- ggplot(plotdata,aes(x,y,color=factor(class))) + geom_point(size=3)
```

```{r}
ggplot(plotdata,aes(x,y,color=factor(class))) + geom_point(size=3)+ geom_point(data=centroids,size=7)


```

```{r}
ggplot(plotdata,aes(x,y,color=factor(class))) + geom_point(size=3)+ geom_point(data=centroids,size=7) + geom_text(data=centroids, size=7, label=centroids$class, colour="black")
```

```{r}
ggplot(plotdata,aes(x,y,color=factor(class))) + geom_point(size=3) + geom_point(data=centroids,size=7) + geom_text(data=centroids, size=7, label=centroids$class, colour="black") + ggtitle("LDA of Conditions 1-3")
```

```{r}
ggplot(plotdata,aes(x,y,color=factor(class))) + geom_point(size=3) + geom_point(data=centroids,size=7) + geom_text(data=centroids, size=7, label=centroids$class, colour="black") + ggtitle("LDA of Conditions 1-3") + geom_text(aes(label=Dataset$X1),hjust=0, vjust=0, colour="black")
```

```{r}
plot1 <- ggplot(plotdata,aes(x,y,color=factor(class))) + geom_point(size=3) + geom_point(data=centroids,size=7) + geom_text(data=centroids, size=7, label=centroids$class, colour="black") + ggtitle("LDA of Conditions 1-3") + geom_text(aes(label=Dataset$X1),hjust=0, vjust=0, colour="black")
```

```{r}
ggsave(filename="plot1.pdf")
```

```{r}
write.csv(as.matrix(CentroidDistances, file = "centroiddistances.csv"))
```


